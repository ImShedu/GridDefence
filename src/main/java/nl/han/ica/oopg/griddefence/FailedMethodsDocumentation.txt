    public void directionDown() {
        setDirection(180);
    }

    public void directionUp() {
        setDirection(0);
    }

    public void directionRight() {
        setDirection(90);
    }

    public void directionLeft() {
        setDirection(270);
    }

    // Flawed method/implementation //documentation req.
    @Override
    public void tileCollisionOccurred(List<CollidedTile> collidedTiles) {
    // TODO Auto-generated method stub
    // int x = Math.round(getCenterX());
    // int y = Math.round(getCenterY());
    int x = (Math.round(getCenterX()) / 40);
    int y = (Math.round(getCenterY()) / 40);
    Sprite testSprite = new
    Sprite("src/main/java/nl/han/ica/oopg/griddefence/Resource/Castle1.jpg");

    if (world.getTileMap().findTileTypeIndex(collidedTiles.get(1).getTile()) !=
    1) {
    // System.out.println("x: " + x + " / " + "y: " + y);
    // System.out.println(world.getTileMap().getTileOnPosition(x,y));
    // System.out.println(world.getTileMap().getTileOnPosition(x-40,y));
    // System.out.println(world.getTileMap().getTileOnPosition(x,y-40));
    //
    System.out.println(world.getTileMap().findTileTypeIndex(collidedTiles.get(1).getTile()));
    //
    System.out.println(world.getTileMap().findTileTypeIndex(world.getTileMap().getTileOnPosition(x,
    // y)));
    // System.out.println("Direction: " + getDirection());
    // collidedTiles.get(1).getTile().setSprite(testSprite);

    if (world.getTileMap().findTileTypeIndex(world.getTileMap().getTileOnIndex(x,
    y + 1)) == 1
    && getDirection() != 0) {
    float[] tileLocation =
    world.getTileMap().getTilePixelLocation(world.getTileMap().getTileOnIndex(x,
    y))
    .array();
    setX(tileLocation[0]);
    setY(tileLocation[1]);
    directionDown();
    } else if
    (world.getTileMap().findTileTypeIndex(world.getTileMap().getTileOnIndex(x, y
    - 1)) == 1
    && getDirection() != 180) {
    float[] tileLocation =
    world.getTileMap().getTilePixelLocation(world.getTileMap().getTileOnIndex(x,
    y))
    .array();
    setX(tileLocation[0]);
    setY(tileLocation[1]);
    directionUp();
    } else if
    (world.getTileMap().findTileTypeIndex(world.getTileMap().getTileOnIndex(x +
    1, y)) == 1
    && getDirection() != 270) {
    float[] tileLocation =
    world.getTileMap().getTilePixelLocation(world.getTileMap().getTileOnIndex(x,
    y))
    .array();
    setX(tileLocation[0]);
    setY(tileLocation[1]);
    directionRight();
    } else if
    (world.getTileMap().findTileTypeIndex(world.getTileMap().getTileOnIndex(x -
    1, y)) == 1
    && getDirection() != 90) {
    float[] tileLocation =
    world.getTileMap().getTilePixelLocation(world.getTileMap().getTileOnIndex(x,
    y))
    .array();
    setX(tileLocation[0]);
    setY(tileLocation[1]);
    // System.out.println(getDirection());
    directionLeft();
    }
    }
    }